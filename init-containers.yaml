# apiVersion: v1
# kind: Pod
# metadata:
#   name: nginx
# spec:
#   containers:
#   - name: echo
#     image: registry.cluster.wik.cloud/public/echo
#     ports:
#     - containerPort: 8080

# apiVersion: apps/v1
# kind: ReplicaSet
# metadata:
#   name: name
#   labels:
#     app: guestbook
#     tier: frontend
# spec:
#   # modify replicas according to your case
#   replicas: 4
#   selector:
#     matchLabels:
#       tier: frontend
#   template:
#     metadata:
#       labels:
#         tier: frontend
#     spec:
#       containers:
#       - name: echo
#         image: registry.cluster.wik.cloud/public/echo
#         ports:
#         - containerPort: 8080

 apiVersion: apps/v1
 kind: Deployment
 metadata:
   name: nginx-deployment
   labels:
     app: nginx
 spec:
   replicas: 4
   strategy:
     type: RollingUpdate
     rollingUpdate:
 #      maxSurge: 1
       maxUnavailable: 50%
   selector:
     matchLabels:
       app: nginx
   template:
     metadata:
       labels:
         app: nginx
     spec:
       containers:
       - name: echo
         image: registry.cluster.wik.cloud/public/echo
         ports:
         - containerPort: 8080
---

apiVersion: v1
kind: Service
metadata:
  name: nginx-service
spec:
  ports:
    - protocol: TCP
      port: 9000
      targetPort: 8080
  selector:
    app: nginx
---
 apiVersion: networking.k8s.io/v1
 kind: Ingress
 metadata:
   name: nginx-ingress
   annotations:
     nginx.ingress.kubernetes.io/rewrite-target: /
 spec:
   ingressClassName: nginx
   rules:
   - host: production.amazon.fr
     http:
       paths:
       - path: /
         pathType: Prefix
         backend:
           service:
             name: nginx-service
             port:
               number: 9000
#kubectl apply -f init-containers.yaml